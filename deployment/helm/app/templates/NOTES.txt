
** Please be patient while the chart is being deployed **

Credentials:

    echo "Username      : {{ .Values.rabbitmq.rabbitmq.username }}"
    echo "Password      : $(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 --decode)"
    echo "ErLang Cookie : $(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-rabbitmq -o jsonpath="{.data.rabbitmq-erlang-cookie}" | base64 --decode)"

RabbitMQ can be accessed within the cluster on port {{ .Values.rabbitmq.service.nodePort }} at {{ template "rabbitmq.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.rabbitmq.rabbitmq.clustering.k8s_domain }}

To access for outside the cluster, perform the following steps:

{{- if contains "NodePort" .Values.rabbitmq.service.type }}

Obtain the NodePort IP and ports:

    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    export NODE_PORT_AMQP=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ .Release.Name }}-rabbitmq)
    export NODE_PORT_STATS=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[3].nodePort}" services {{ .Release.Name }}-rabbitmq)

To Access the RabbitMQ AMQP port:

    echo "URL : amqp://$NODE_IP:$NODE_PORT_AMQP/"

To Access the RabbitMQ Management interface:

    echo "URL : http://$NODE_IP:$NODE_PORT_STATS/"

{{- else if contains "LoadBalancer" .Values.rabbitmq.service.type }}

Obtain the LoadBalancer IP:

NOTE: It may take a few minutes for the LoadBalancer IP to be available.
      Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "rabbitmq.fullname" . }}'

    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ .Release.Name }}-rabbitmq --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")

To Access the RabbitMQ AMQP port:

    echo "URL : amqp://$SERVICE_IP:{{ .Values.rabbitmq.service.port }}/"

To Access the RabbitMQ Management interface:

    echo "URL : http://$SERVICE_IP:{{ .Values.rabbitmq.service.managerPort }}/"

{{- else if contains "ClusterIP"  .Values.rabbitmq.service.type }}

To Access the RabbitMQ AMQP port:

    echo "URL : amqp://127.0.0.1:{{ .Values.rabbitmq.service.port }}/"
    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ .Release.Name }}-rabbitmq {{ .Values.rabbitmq.service.port }}:{{ .Values.rabbitmq.service.port }}

To Access the RabbitMQ Management interface:

    echo "URL : http://127.0.0.1:{{ .Values.rabbitmq.service.managerPort }}/"
    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ .Release.Name }}-rabbitmq {{ .Values.rabbitmq.service.managerPort }}:{{ .Values.rabbitmq.service.managerPort }}

{{- end }}

{{- if .Values.rabbitmq.metrics.enabled }}

To access the RabbitMQ Prometheus metrics, get the RabbitMQ Prometheus exporter URL by running:

    echo "Prometheus Metrics URL: http://127.0.0.1:{{ .Values.rabbitmq.metrics.port }}/metrics"
    kubectl port-forward --namespace {{ .Release.Namespace }} {{ .Release.Name }}-rabbitmq-0 {{ .Values.rabbitmq.metrics.port }}:{{ .Values.rabbitmq.metrics.port }}

Then, open the URL obtained in a browser.

{{- end }}

{{/*{{- include "rabbitmq.validateValues" . -}}*/}}

{{- if and (contains "bitnami/" .Values.rabbitmq.image.repository) (not (.Values.rabbitmq.image.tag | toString | regexFind "-r\\d+$|sha256:")) }}

WARNING: Rolling tag detected ({{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}), please note that it is strongly recommended to avoid using rolling tags in a production environment.
+info https://docs.bitnami.com/containers/how-to/understand-rolling-tags-containers/

{{- end }}
